
----------------- myShell Tutorial -----------------

* Preface
---------------------------
This is a simplified shell. It will perform a set of inbuild commands and will outsource all other commands to the external shell.

* Command Syntax
---------------------------
The commands below follow a specific syntax. The syntax is as follows:

Command: <command> [arg1 arg2 ... argN] [< inputArg] [>|>> outputArg] [&]

[ ] - square brackets represent optional arguments
| - piping symbol "|" means that either one of the args listed must be used.
< > - angle brackets represent mandatory arg

> | >> : represents output redirection from stdout to a file
	- > appends to end of given file
	- >> rewrites whole file with output
< : represents input redirection from user input to a given file
& : represents background execution of a command

* Change Directory <cd>
---------------------------
Allows you to change a directory. Type "cd .." to back a directory. To get the current directory type "cd".

Syntax: <cd> [args]

* List Directory <dir>
---------------------------
Lists the contents of a given directory

Syntax: <dir> <arg1> [arg2 ... argN] [>|>> outputArg]

* Env Variables <environ>
---------------------------
List all environment variables

Syntax: <environ> [>|>> outputArg]

* Printing Strings <echo>
---------------------------
Print out any string onto terminal.

Syntax: <echo> [arg1 ... argN] [>|>> outputArg]

* Help File <help>
---------------------------
To view this help file type "help". But you already know that don't you?

Syntax: <help>  [>|>> outputArg]

* Pause Shell <pause>
---------------------------
Pause the shell from running. Once you type this command press ENTER to continue

Syntax: <pause>

* Clear Screen <clear>
---------------------------
Clear the screen of previous output.

Syntax: <clear>

* Quit Shell <quit>
---------------------------
Quit the shell.

Syntax: <quit>

* Other Commands
---------------------------
All external commands can be run with the following syntax.

Syntax: <command> [arg1 arg2 ... argN] [< inputArg] [>|>> outputArg] [&]

